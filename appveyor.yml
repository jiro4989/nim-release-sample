version: '{build}'

environment:
  MINGW_DIR: mingw64
  MINGW_URL: https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win64/Personal%20Builds/mingw-builds/4.9.2/threads-win32/seh/x86_64-4.9.2-release-win32-seh-rt_v4-rev4.7z/download
  MINGW_ARCHIVE: x86_64-4.9.2-release-win32-seh-rt_v4-rev4.7z
  NIM_DIR: nim-0.19.6
  NIM_URL: https://nim-lang.org/download/nim-0.19.6_x64.zip
  NIM_ARCHIVE: nim-0.19.6_x64.zip
  platform: x64

cache:
    - '%MINGW_ARCHIVE%'
    - '%NIM_ARCHIVE%'

matrix:
  fast_finish: true

install:
  - MKDIR %CD%\DIST
  - IF not exist "%MINGW_ARCHIVE%" appveyor DownloadFile "%MINGW_URL%" -FileName "%MINGW_ARCHIVE%"
  - 7z x -y "%MINGW_ARCHIVE%" -o"%CD%\DIST"> nul
  - IF not exist "%NIM_ARCHIVE%" appveyor DownloadFile "%NIM_URL%" -FileName "%NIM_ARCHIVE%"
  - 7z x -y "%NIM_ARCHIVE%" -o"%CD%\DIST"> nul
  - SET PATH=%CD%\DIST\%NIM_DIR%\BIN;%CD%\DIST\%MINGW_DIR%\BIN;%CD%\BIN;%PATH%

build: off

test_script:
  - echo %TEST_V%
  - nim -v
  - nimble -v
  - nimble test

build_script:
  - nimble docs
  - nimble build

after_build:
  - mkdir nim_release_sample_windows
  - copy bin\nim_release_sample.exe nim_release_sample_windows\
  - copy README.md nim_release_sample_windows\
  - copy LICENSE nim_release_sample_windows\
  - 7z a nim_release_sample_windows.zip nim_release_sample_windows

# deploy:
#   - provider: GitHub
#     artifact: nim_release_sample_windows.zip
#     draft: false
#     prerelease: false
#     auth_token:
#       secure: xxxxxxxxxxxxxxxxxxxxxxxxx
#     on:
#       branch: master
#       APPVEYOR_REPO_TAG: true 

deploy:
- provider: GitHub
  auth_token:
    secure: esSlDbpH2rczLbaAJm5b1tG1KfwaQ6POEICFbpY7oJkW++IrNwJFpz6O5oyoAe/7
  artifact: nim_release_sample_windows.zip
  draft: false
  prerelease: false
  force_update: false
  on:
    branch: master
    APPVEYOR_REPO_TAG: true 